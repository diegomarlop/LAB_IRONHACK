use sakila;
#1. Rank films by length (filter out the rows with nulls or zeros in length column).
#  Select only columns title, length and rank in your output.
select length, row_number () over (order by length desc) as 'rank' from sakila.film
where length is not null and length <> 0;

#2. Rank films by length within the rating category (filter out the rows with nulls or zeros in length column). 
#In your output, only select the columns title, length, rating and rank.
select * from sakila.film;
select length,rating,title, row_number () over (partition by rating order by length desc) as 'rank' from sakila.film
where length is not null and length <> 0;

#3. How many films are there for each of the categories in the category table? 
#Hint: Use appropriate join between the tables "category" and "film_category".
select * from sakila.category;
select * from sakila.film_category;

SELECT count(*) as '# Films' ,name FROM category c
JOIN film_category fc  ON c.category_id=fc.category_id
group by name;

#4. Which actor has appeared in the most films?
#Hint: You can create a join between the tables "actor" and "film actor" and count the number of times an actor appears.
select * from sakila.actor;
select * from sakila.film_actor;

select count(*) as films,a.actor_id from actor a 
join film_actor fa on a.actor_id = fa.actor_id
group by a.actor_id
order by films desc;

#5. Which is the most active customer (the customer that has rented the most number of films)? 
#Hint: Use appropriate join between the tables "customer" and "rental" and count the rental_id for each customer.
select * from sakila.customer; 
select * from sakila.rental; 

select count(*) as films_rented,c.customer_id from customer c 
join rental r on c.customer_id = r.customer_id
group by c.customer_id
order by films_rented desc;
